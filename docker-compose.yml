version: '3.8'

volumes:
  mysqlData:
  rabbitmqData:
  rabbitmqLogData:
services:
  rabbitmq:
    build:
      context: .
      dockerfile: ./docker/rabbitmq/Dockerfile
    volumes:
      - rabbitmqData:/var/lib/rabbitmq/
      - rabbitmqLogData:/var/log/rabbitmq
      - ${PWD}/docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ${PWD}/docker/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ${PWD}/docker/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    ports:
      - '5672:5672'
      - '15672:15672'
      - '1883:1883'
    networks:
      - cdc_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3  
  mysql:
    image: mysql:latest
    restart: always
    container_name: mysql
    ports:
      - 3306:3306
    command: --server-id=85744
    environment:
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=mysql
      - MYSQL_ROOT_PASSWORD=mysql
      - BINLOG_FORMAT=ROW
    volumes:
      - mysqlData:/var/lib/mysql
      - ./docker/mysql/init-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: mysqladmin ping -h localhost -P 3306 -u root --password=mysql
      interval: 2s
      timeout: 20s
      retries: 10
    networks:
      - cdc_network
  debezium:
    image: quay.io/debezium/server:latest
    ports:
      - 8080:8080
    volumes:
      - ./docker/debezium/conf:/debezium/conf
      - ./docker/debezium/data:/debezium/data
    environment:
      - database.ssl.mode=disable
      - DEBEZIUM_TRUSTED_CERTIFICATES=trustServerCertificate=true
    networks:
      - cdc_network
networks:
  cdc_network:
    driver: bridge
